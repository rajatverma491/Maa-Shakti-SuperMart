@model KiranaMart.Models.Billing

@{
    ViewBag.Title = "ConfirmBillExchange";
}


<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />

<h4 style="font-weight:bold;">Amount Due - @Model.AmountDue</h4>
<h4 style="font-weight:bold;">Amount Paid - @Model.AmountPaid</h4>
@using (Html.BeginForm("ExchangeBillPrint", "Billings"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CustomerId)

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "datepicker form-control", Value = Model.Date.ToShortDateString() } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountPaid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountPaid, new { htmlAttributes = new { @class = "form-control", Value = TempData["totalValue"], required = "''" , id="amountpaid",onkeyup="sum();"} })
                @Html.ValidationMessageFor(model => model.AmountPaid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "datepicker form-control", Value = Model.DueDate.ToShortDateString() } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AmountDue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmountDue, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", Value = "", required = "''",id="amountdue" } })
                @Html.ValidationMessageFor(model => model.AmountDue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success"  onclick="return Validate()" />
            </div>
        </div>
    </div>

}



<div style="float:right;  margin-top: -175px;" ">
    <label class="control-label">New Total</label>
    <input class="form-control" type="text" id="value1" name="value1" readonly="readonly" value="@TempData["totalValue"]" /><br />
    <label class="control-label">Previous Total </label>
    <input class="form-control" type="text" id="value2" name="value2" readonly="readonly" value="@(Model.AmountPaid+Model.AmountDue)" /><br />
    <input type="submit" name="Sumbit" class="btn btn-info" value="Calculate" onclick="javascript:addNumbers()" /><br />
    <label class="control-label">New Amount</label><br />
    <label id="answer" name="answer" value=""></label>
</div>


@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/DatePickerOnejquery-1.9.1.js"></script>
    <script src="~/Scripts/DatePickerTwojquery-ui.js"></script>


    <script>

        $(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+10",
                //minDate: new Date(),
                //maxDate: new Date(2018, 0, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });
        });
    </script>

    <script type="text/javascript">

        function disableBackButtonAllBrowsers() {

            window.history.forward()

        };


        window.onload = disableBackButtonAllBrowsers();

        window.onpageshow = function (evts) {

            if (evts.persisted) {

                disableBackButtonAllBrowsers();

            }

        };



        window.onunload = function () {

            void (0)

        };

    </script>
    <script language="javascript">
        function addNumbers() {
            var val1 = parseInt(document.getElementById("value1").value);
            var val2 = parseInt(document.getElementById("value2").value);
            var ansD = document.getElementById("answer");
            var var4 = val1 - val2;
            if (var4 > 0) {
                ansD.value = "Please Take " + var4 + " from customer";
                document.getElementById('answer').innerHTML = ansD.value;
            } else {
                var4 = var4 * (-1);
                ansD.value = "Please Give " + var4 + " to customer";
                document.getElementById('answer').innerHTML = ansD.value;
            }
        }
    </script>

    <script type="text/javascript">
        function Validate() {
            var amountpaid = document.getElementById("amountpaid").value
            if (amountpaid <= @TempData["totalValue"]) {
                return true;
            }
            alert("Amount Paid can not be grater than Total");
            return false;
        }
    </script>

    <script>
  function sum() {
       var txtFirstNumberValue = document.getElementById('amountpaid').value;
       if (txtFirstNumberValue == "")
           txtFirstNumberValue = 0;
       var result = @TempData["totalValue"] - parseInt(txtFirstNumberValue) 
       if (!isNaN(result)) {
           document.getElementById('amountdue').value = result;
       }
   }

    </script>


}
