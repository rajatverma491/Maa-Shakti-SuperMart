@model KiranaMart.VIewModels.AllClassViewModel

@{
    ViewBag.Title = "ConfirmBill";
}
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
@using (Html.BeginForm("PrintBill", "Products", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Billing.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Billing.Date, new { htmlAttributes = new { @class = "datepicker2 form-control", id = "datepicker2", Value = DateTime.Now.ToShortDateString() } })
            @Html.ValidationMessageFor(model => model.Billing.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Billing.AmountPaid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Billing.AmountPaid, new { htmlAttributes = new { @class = "form-control", Value = ViewBag.TotalAmount, id = "amountpaid" } })
            @Html.ValidationMessageFor(model => model.Billing.AmountPaid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Billing.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Billing.DueDate, new { htmlAttributes = new { @class = "datepicker1 form-control", Value = DateTime.Now.ToShortDateString(), id = "datepicker1" } })
            @Html.ValidationMessageFor(model => model.Billing.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Customer.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.PhoneNo, new { htmlAttributes = new { @class = "mobile form-control", required = "required", id = "mobile" } })
            @Html.ValidationMessageFor(model => model.Customer.PhoneNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "name form-control", id = "name" } })
            @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Customer.Address, new { htmlAttributes = new { @class = "address form-control", id = "address" } })
            @Html.ValidationMessageFor(model => model.Customer.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Discount, new { htmlAttributes = new { @class = "address form-control", id = "address" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Print Bill" class="btn btn-success " onclick="return Validate()" />
        </div>
    </div>
</div>
}

<div style="float:right; margin-top: -325px;">
    <label class="control-label">Amount Required</label>
    <input class="form-control" type="text" id="value1" name="value1" readonly="readonly" value="@ViewBag.TotalAmount" /><br />
    <label class="control-label">Amount Paid in Cash</label>
    <input class="form-control" type="text" id="value2" name="value2" value="" /><br />
    <input type="submit" name="Sumbit" class="btn btn-info" value="Click here" onclick="javascript:addNumbers()" /><br />
    <label class="control-label">Amount to Return </label><br />
    <input type="text" id="answer" name="answer" value="" style="border-width:0px;" />
</div>
@*<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@

@section scripts{

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/DatePickerOnejquery-1.9.1.js"></script>
    <script src="~/Scripts/DatePickerTwojquery-ui.js"></script>

    <script>

        $(function () {
            $(".datepicker1").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+10",
                //minDate: new Date(),
                //maxDate: new Date(2018, 0, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });
        });
    </script>

    <script>

        $(function () {
            $(".datepicker2").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+10",
                //minDate: new Date(),
                //maxDate: new Date(2018, 0, 1),
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });
        });
    </script>

    <script type="text/javascript">

        function disableBackButtonAllBrowsers() {

            window.history.forward()

        };


        window.onload = disableBackButtonAllBrowsers();

        window.onpageshow = function (evts) {

            if (evts.persisted) {

                disableBackButtonAllBrowsers();

            }

        };



        window.onunload = function () {

            void (0)

        };

    </script>

    <script type="text/javascript">
        function Validate() {
            var amountpaid = document.getElementById("amountpaid").value;
            var mobile = document.getElementById("mobile").value;
            var pattern = /^(\+91[\-\s]?)?[0]?(91)?[789]\d{9}/;
            if (amountpaid <= @ViewBag.TotalAmount && pattern.test(mobile)) {
                return true;
            }
            alert("It is not valid mobile number! or Amount Paid can not be grater than Total");
            return false;
        }
    </script>

    <script language="javascript">
        function addNumbers() {
            var val1 = parseInt(document.getElementById("value1").value);
            var val2 = parseInt(document.getElementById("value2").value);
            var ansD = document.getElementById("answer");
            ansD.value = val2 - val1;
        }
    </script>

    <link rel="stylesheet" href="~/Scripts/Autofillcssjquery-ui.css">
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#mobile").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Products/GetSearchValue",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.PhoneNo, value: item.PhoneNo };
                            
                            }))


                        }
                    })
                },
                messages: {
                    noResults: "", results: ""
                }
            });
           
        })

    </script>


}
